{"version":3,"sources":["utils/publicRoutes.js","translator.js","library/grid.js","library/Container.jsx","library/Divider.jsx","components/Home/HomeTitle.jsx","data/socialLinks.js","data/tecnologies.js","components/Home/TecnologiesGroup.jsx","components/Home/HomeContent.jsx","components/Home/Home.jsx","components/About/About.jsx","components/Portfolio/Portfolio.jsx","components/Contact/Contact.jsx","components/Router.js","components/LenguagePicker.jsx","components/core/Header.jsx","components/core/Footer.jsx","App.js","serviceWorker.js","index.js"],"names":["publicResource","publicRoute","process","i18n","use","Backend","initReactI18next","init","lng","backend","loadPath","fallbackLng","debug","ns","defaultNS","keySeparator","interpolation","escapeValue","formatSeparator","react","wait","container","maxWidth","display","margin","padding","style","Container","children","css","Divider","color","height","backgroundColor","defaultProps","textAlign","position","img","width","heigth","border","marginBottom","marginRight","marginLeft","borderRadius","HomeTitle","t","useTranslation","className","src","alt","socialLinks","link","name","text","tecnologies","groupName","tecs","logo","fontSize","flexFlow","alignItems","justifyContent","marginTop","TecnologiesGroup","tecGroup","map","h4","flexDirection","HomeContent","tecnologiesContent","content","sl","key","href","target","rel","Home","about","Portfolio","a","i","contact","contactLinks","contentSocialLinks","includes","toLocaleLowerCase","console","info","router","path","exact","component","About","Contact","from","to","float","select","LanguageSelector","id","onChange","event","changeLanguage","value","defaultValue","textAling","LenguagePicker","Header","HomeHeader","App","fallback","Router","Footer","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.a89af30e.chunk.js","sourcesContent":["/**\r\n * return a resource inside public folder\r\n * @param {string} publicRoute \r\n */\r\nexport const publicResource = (publicRoute) => `${process.env.PUBLIC_URL}${publicRoute}`;","import i18n from 'i18next';\r\nimport Backend from 'i18next-xhr-backend';\r\nimport { initReactI18next } from 'react-i18next';\r\n\r\nimport { publicResource } from './utils';\r\n\r\ni18n\r\n  .use(Backend)\r\n  .use(initReactI18next)\r\n  .init({\r\n    lng: 'en',\r\n    backend: {\r\n      loadPath: publicResource('/translations/{{lng}}.json'),\r\n    },\r\n    fallbackLng: 'en',\r\n    debug: true,\r\n    ns: ['translations'],\r\n    defaultNS: 'translations',\r\n    keySeparator: false,\r\n    interpolation: {\r\n      escapeValue: false,\r\n      formatSeparator: ','\r\n    },\r\n    react: {\r\n      wait: true\r\n    }\r\n  });\r\n\r\nexport default i18n;","export const container = {\r\n  maxWidth: '1200px',\r\n  display: 'block',\r\n  margin: '0 auto',\r\n  '@media (max-width: 1200px)': {\r\n    padding: 10,\r\n  },\r\n}","/** @jsx jsx */\r\nimport { jsx } from '@emotion/core';\r\nimport { container } from './grid';\r\n\r\nconst style = {\r\n  ...container\r\n};\r\n\r\nconst Container = ({ children }) => {\r\n  return <section css={style}> {children} </section>;\r\n}\r\n\r\nexport default Container;","/** @jsx jsx */\r\nimport { jsx } from '@emotion/core';\r\nimport { container } from './grid';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst style = {\r\n  ...container,\r\n  padding: '0px !important',\r\n  margin: '20px auto',\r\n};\r\n\r\nconst Divider = ({ color, height }) => {\r\n  style.backgroundColor = color;\r\n  style.height = height;\r\n  \r\n  return <div css={style}></div>;\r\n}\r\n\r\nDivider.propTypes = {\r\n  color: PropTypes.string,\r\n  height: PropTypes.number,\r\n};\r\n\r\nDivider.defaultProps = {\r\n  color: '#111',\r\n  height: 3,\r\n};\r\n\r\nexport default Divider;","/** @jsx jsx */\r\nimport { jsx } from '@emotion/core';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { Divider } from '../../library';\r\n\r\nconst style = {\r\n  textAlign: 'center',\r\n  position: 'relative',\r\n  img: {\r\n    width: '200px',\r\n    heigth: '200px',\r\n  },\r\n  '.img-container': {\r\n    width: '240px',\r\n    display: 'block',\r\n    height: '220px',\r\n    border: '2px solid black',\r\n    marginBottom: '25px',\r\n    marginRight: 'auto',\r\n    marginLeft: 'auto',\r\n    borderRadius: '24px',\r\n  },\r\n};\r\n\r\nconst HomeTitle = () => {\r\n  const { t } = useTranslation();\r\n\r\n  return (\r\n    <div css={style}>\r\n      <div className=\"img-container\">\r\n        <img src=\"me.gif\" alt=\"Nicolas Perez, software developer\" />\r\n      </div>\r\n      <h1>{t('home.title')}</h1>\r\n      <h3>{t('home.subtitle')}</h3>\r\n      <Divider />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HomeTitle;\r\n","export const socialLinks = [\r\n  {\r\n    link: 'https://github.com/nperez9',\r\n    name: 'GitHub',\r\n    text: 'contact.github',\r\n  },\r\n  {\r\n    link: 'https://stackoverflow.com/users/6888888/nperez9',\r\n    name: 'StackOverflow',\r\n    text: 'contact.stackoverflow',\r\n  },\r\n  {\r\n    link: 'https://www.linkedin.com/in/nicol%C3%A1s-agust%C3%ADn-perez-23a5b1aa',\r\n    name: 'LinkedIn',\r\n    text: 'contact.linkedin',\r\n  },\r\n  {\r\n    link: 'mailto:nicolasperez95.a@gmail.com',\r\n    name: 'Gmail',\r\n    text: 'contact.gmail',\r\n  },\r\n];\r\n","export const tecnologies = [\r\n  {\r\n    groupName: 'Front-end',\r\n    tecs: [\r\n      {\r\n        name: 'React',\r\n        logo: 'react-icon.svg'\r\n      },\r\n      {\r\n        name: 'Angular',\r\n        logo: 'angular-logo.png',\r\n      },\r\n      {\r\n        name: 'Webpack',\r\n        logo: 'webpack-logo.png',\r\n      },\r\n      {\r\n        name: 'TS',\r\n        logo: 'ts-logo.png',\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    groupName: 'Back-end',\r\n    tecs: [\r\n      {\r\n        name: 'NodeJs',\r\n        logo: 'nodejs-logo.png'\r\n      },\r\n      {\r\n        name: 'MongoDB',\r\n        logo: 'mongo-logo.png'\r\n      },\r\n      {\r\n        name: 'Docker',\r\n        logo: 'docker-logo.png',\r\n      },\r\n      {\r\n        name: 'MySql',\r\n        logo: 'mysql-logo.png',\r\n      },\r\n      {\r\n        name: 'TS',\r\n        logo: 'ts-logo.png',\r\n      }\r\n    ]\r\n  }\r\n];\r\n","/** @jsx jsx */\r\nimport { jsx } from '@emotion/core';\r\nimport { publicResource } from '../../utils';\r\n\r\nconst style = {\r\n  '.tec-group-title': {\r\n    marginBottom: '15px',\r\n    fontSize: '16px',\r\n  },\r\n  '.tecs-container': {\r\n    display: 'flex',\r\n    flexFlow: 'row wrap',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    marginBottom: '20px',\r\n    '.tec-item': {\r\n      width: '170px',\r\n      padding: '15px',\r\n      '> img': {\r\n        maxWidth: '130px',\r\n        height: '130px',\r\n        margin: 'auto',\r\n        display: 'block',\r\n      },\r\n      '> span': {\r\n        marginTop: '5px',\r\n        display: 'inline-block'\r\n      }\r\n    }\r\n  }\r\n};\r\n\r\nconst TecnologiesGroup = ({ tecGroup }) => {\r\n  return (\r\n    <div className='tec-group' css={style}>\r\n      <h5 className='tec-group-title'>{tecGroup.groupName}:</h5>\r\n      <div className=\"tecs-container\">\r\n        {\r\n          tecGroup.tecs.map((t) => {\r\n            return (\r\n              <div className='tec-item'>\r\n                <img src={publicResource(`/images/${t.logo}`)} alt={t.name} />\r\n                <span>{t.name}</span>\r\n              </div>\r\n            );\r\n          })\r\n        }\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TecnologiesGroup;\r\n","/** @jsx jsx */\r\nimport { jsx } from '@emotion/core';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nimport { socialLinks } from '../../data/socialLinks';\r\nimport { tecnologies } from '../../data/tecnologies';\r\nimport { Divider } from '../../library';\r\n\r\nimport TecnologiesGroup from './TecnologiesGroup';\r\n\r\nconst style = {\r\n  textAlign: 'center',\r\n  h4: {\r\n    marginBottom: 30,\r\n    fontSize: 18\r\n  },\r\n  '.social-block': {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    flexDirection: 'row',\r\n    '@media (max-width: 780px)': {\r\n      flexDirection: 'column',\r\n      '> div': {\r\n        margin: '10px auto',\r\n      },\r\n    },\r\n    '> div': {\r\n      padding: '0 20px',\r\n    },\r\n  },\r\n};\r\n\r\nconst HomeContent = () => {\r\n  let tecnologiesContent = null;\r\n  let content = null;\r\n  const { t } = useTranslation();\r\n\r\n  tecnologiesContent = tecnologies.map((tecGroup) => {\r\n    return <TecnologiesGroup tecGroup={tecGroup} />\r\n  });\r\n\r\n  content = socialLinks.map((sl) => {\r\n    return (\r\n      <div key={sl.name}>\r\n        <a className=\"nes-btn is-primary\" href={sl.link} target=\"_blank\" rel=\"noopener noreferrer\">\r\n          {sl.name}\r\n        </a>\r\n      </div>\r\n    );\r\n  });\r\n\r\n\r\n  return (\r\n    <section css={style}>\r\n      <div>\r\n      <h4>{ t('home.tecnologies') }</h4>\r\n        <div>\r\n          { tecnologiesContent }\r\n        </div>\r\n      </div>\r\n      <Divider />\r\n      <div>\r\n        <h4>{ t('home.findMe') }</h4>\r\n        <div className=\"social-block\">{content}</div>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default HomeContent;\r\n","/** @jsx jsx */\r\nimport { jsx } from '@emotion/core';\r\n\r\nimport { container } from './../../library';\r\nimport HomeTitle from './HomeTitle';\r\nimport HomeContent from './HomeContent';\r\n\r\nconst style = {\r\n  ...container\r\n};\r\n\r\nconst Home = () => {\r\n  return (\r\n    <main css={style}>\r\n      <HomeTitle />\r\n      <HomeContent />\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","/** @jsx jsx */\r\nimport { jsx } from '@emotion/core';\r\n\r\nconst about = () => {\r\n  return <div>your component about</div>;\r\n};\r\n\r\nexport default about;","/** @jsx jsx */\r\nimport { jsx } from '@emotion/core';\r\n\r\nimport { Container } from '../../library';\r\n\r\nconst Portfolio = () => {\r\n  return (\r\n    <Container>\r\n      \r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Portfolio;","/* eslint-disable react-hooks/rules-of-hooks */\r\n/** @jsx jsx */\r\nimport { jsx } from '@emotion/core';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nimport { container } from './../../library/grid';\r\nimport { socialLinks } from './../../data/socialLinks';\r\n\r\nconst style = {\r\n  ...container,\r\n  textAlign: 'center',\r\n  a: {\r\n    display: 'block',\r\n    margin: 12,\r\n    i: {\r\n      heigth: 24,\r\n      width: 24,\r\n      marginRight: 14,\r\n    },\r\n  },\r\n};\r\n\r\nconst contact = () => {\r\n  const contactLinks = ['linkedin', 'gmail'];\r\n  const { t } = useTranslation();\r\n\r\n  const contentSocialLinks = socialLinks.map(({ name, link, text }) => {\r\n    if (!contactLinks.includes(name.toLocaleLowerCase())) {\r\n      return null;\r\n    }\r\n    console.info(text);\r\n    return (\r\n      <a key={name} href={link} target=\"_blank\" rel=\"noopener noreferrer\">\r\n        <i className={`nes-icon ${name.toLocaleLowerCase()} is-small`} />\r\n        {t(text)}\r\n      </a>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <main css={style}>\r\n      <h1>Contact me!</h1>\r\n      <div>{contentSocialLinks}</div>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default contact;\r\n","import React from 'react';\r\nimport { Route, Switch, Redirect } from 'react-router-dom';\r\nimport Home from './Home/Home';\r\nimport About from './About/About';\r\nimport Portfolio from './Portfolio/Portfolio';\r\nimport Contact from './Contact/Contact';\r\n\r\nconst router = () => {\r\n  return (\r\n      <Switch>\r\n        <Route path=\"/home\" exact component={Home} />      \r\n        <Route path=\"/about\" exact component={About} />\r\n        <Route path=\"/portfolio\" exact component={Portfolio} />\r\n        <Route path=\"/contact\" exact component={Contact} />\r\n        <Redirect exact from=\"/\" to=\"/home\" />\r\n      </Switch>\r\n  );\r\n};\r\n\r\nexport default router;\r\n","/** @jsx jsx */\r\nimport { jsx } from '@emotion/core';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nconst style = {\r\n  display: 'inline-block',\r\n  float: 'right',\r\n  '#lng_select': {\r\n    width: '120px',\r\n    float: 'left',\r\n    select: {\r\n      padding: '2px'\r\n    }\r\n  },\r\n};\r\n\r\nconst LanguageSelector = () => {\r\n  const { i18n } = useTranslation();\r\n\r\n  const changeLanguage = (event) => {\r\n    i18n.changeLanguage(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <div style={style}>\r\n      <div className=\"nes-select\" id=\"lng_select\" style={style}>\r\n        <select onChange={changeLanguage}>\r\n          <option value=\"en\" name=\"language\" defaultValue>\r\n            ENG\r\n          </option>\r\n          <option value=\"es\" name=\"language\">\r\n            ESP\r\n          </option>\r\n        </select>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LanguageSelector;\r\n","/** @jsx jsx */\r\nimport { jsx } from '@emotion/core';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { Link } from 'react-router-dom';\r\nimport LenguagePicker from '../LenguagePicker.jsx';\r\n\r\n\r\nimport { container } from '../../library';\r\n\r\nconst style = {\r\n  ...container,\r\n  padding: '10px 0',\r\n  textAling: 'center',\r\n  marginBottom: 30,\r\n  '> a': {\r\n    marginRight: 25,\r\n    color: 'black', \r\n  },\r\n  LenguagePicker: {\r\n    float: 'right',\r\n  }\r\n};\r\n\r\nconst Header = () => {\r\n  const { t } = useTranslation();\r\n\r\n  return (\r\n    <nav css={style}>\r\n      {/*<Link to=\"/home\">Home</Link>\r\n      <Link to=\"/portfolio\">Portfolio</Link>\r\n      <Link to=\"/about\">{ t('header.about') }</Link>\r\n  <Link to=\"/contact\">{ t('header.contact') }</Link>*/}\r\n      <LenguagePicker />\r\n    </nav>\r\n  );\r\n}\r\n\r\nexport default Header;","/** @jsx jsx */\r\nimport { jsx } from '@emotion/core';\r\nimport { Container } from '../../library';\r\n\r\nconst style = {\r\n  marginTop: 40,\r\n  backgroundColor: '#111',\r\n  color: 'white',\r\n  padding: 20,\r\n  a: {\r\n    color: 'white',\r\n  },\r\n};\r\n\r\nconst HomeHeader = () => {\r\n  return (\r\n    <footer css={style}>\r\n      <Container>\r\n        <div>\r\n          <span>\r\n            powered by{' '}\r\n            <a \r\n              href=\"https://nostalgic-css.github.io/NES.css/\" \r\n              target=\"_blank\"\r\n              rel=\"noopener noreferrer\"\r\n            > \r\n              NES.css\r\n            </a>\r\n          </span>\r\n        </div>\r\n      </Container>\r\n    </footer>\r\n  );\r\n};\r\n\r\nexport default HomeHeader;","import React, { Suspense } from 'react';\r\n\r\nimport './translator.js';\r\nimport Router from './components/Router';\r\nimport Header from './components/core/Header';\r\nimport Footer from './components/core/Footer';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App nes-text\">\r\n      <Suspense fallback={null}>\r\n        <Header />\r\n        <Router />\r\n        <Footer />\r\n      </Suspense>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { BrowserRouter } from \"react-router-dom\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <BrowserRouter>\r\n      <App />\r\n    </BrowserRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}